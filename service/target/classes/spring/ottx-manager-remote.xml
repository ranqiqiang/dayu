<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
default-autowire="byName">
    <bean id="endpoint" class="com.alibaba.otter.shared.communication.core.impl.dubbo.DubboCommunicationEndpoint" init-method="initial" destroy-method="destory">
        <property name="port" value="${otter.communication.manager.port:1099}" />
        <property name="payload" value="${otter.communication.payload:8388608}" />
    </bean>
    <bean id="communicationClient" class="com.alibaba.otter.shared.communication.core.impl.DefaultCommunicationClientImpl" init-method="initial" destroy-method="destory">
        <property name="poolSize" value="${otter.communication.pool.size:10}" />
        <property name="factory">
            <bean class="com.alibaba.otter.shared.communication.core.impl.dubbo.DubboCommunicationConnectionFactory">
                <property name="payload" value="${otter.communication.payload:8388608}" />
            </bean>
        </property>
    </bean>

    <!-- 异常处理拦截器 -->
    <bean id="remoteExceptionLoggerInterceptor" class="com.caicai.ottx.service.remote.interceptor.RemoteExceptionLoggerInterceptor" scope="singleton"/>
    <bean id="baseRemoteService" class="org.springframework.aop.framework.ProxyFactoryBean" abstract="true">
        <property name="proxyTargetClass" value="true"/>
        <!-- 强制使用cglib代理 -->
        <property name="interceptorNames">
            <list>
                <value>remoteExceptionLoggerInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="configRemoteService" parent="baseRemoteService" scope="singleton">
        <property name="targetName" value="configRemoteServiceTarget"/>
    </bean>
    <bean id="configRemoteServiceTarget" class="com.caicai.ottx.service.remote.impl.ConfigRemoteServiceImpl"  scope="singleton">
        <property name="communicationClient" ref="communicationClient" />
    </bean>

    <bean id="statsRemoteService" parent="baseRemoteService" scope="singleton">
        <property name="targetName" value="statsRemoteServiceTarget"/>
    </bean>
    <bean id="statsRemoteServiceTarget" class="com.caicai.ottx.service.remote.impl.StatsRemoteServiceImpl"  scope="singleton">
    </bean>

    <bean id="arbitrateRemoteService" parent="baseRemoteService" scope="singleton">
        <property name="targetName" value="arbitrateRemoteServiceTarget"/>
    </bean>
    <bean id="arbitrateRemoteServiceTarget" class="com.caicai.ottx.service.remote.impl.ArbitrateRemoteServiceImpl"  scope="singleton">
    </bean>

    <bean id="canalRemoteService" parent="baseRemoteService" scope="singleton">
        <property name="targetName" value="canalRemoteServiceTarget"/>
    </bean>
    <bean id="canalRemoteServiceTarget" class="com.caicai.ottx.service.remote.impl.CanalRemoteServiceImpl"  scope="singleton">
        <property name="tsdbJdbcUrl" value="${otter.database.driver.url}" />
        <property name="tsdbJdbcUserName" value="${otter.database.driver.username}" />
        <property name="tsdbJdbcPassword" value="${otter.database.driver.password}" />
    </bean>
    <!--<bean id="nodeRemoteService" class="com.caicai.ottx.service.remote.impl.NodeMBeanServiceImpl">-->
        <!--<dwr:remote javascript="Node">-->
            <!--<dwr:include method="isSelectRunning"/>-->
            <!--<dwr:include method="isExtractRunning"/>-->
            <!--<dwr:include method="isTransformRunning"/>-->
            <!--<dwr:include method="isLoadRunning"/>-->
            <!--<dwr:include method="selectStageAggregation"/>-->
            <!--<dwr:include method="extractStageAggregation"/>-->
            <!--<dwr:include method="transformStageAggregation"/>-->
            <!--<dwr:include method="loadStageAggregation"/>-->
            <!--<dwr:include method="selectPendingProcess"/>-->
            <!--<dwr:include method="extractPendingProcess"/>-->
            <!--<dwr:include method="transformPendingProcess"/>-->
            <!--<dwr:include method="loadPendingProcess"/>-->
        <!--</dwr:remote>-->
    <!--</bean>-->
</beans>
